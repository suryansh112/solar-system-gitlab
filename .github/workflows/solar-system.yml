name: Solar-System
on:
  workflow_dispatch:
  #push:
env:
  MONGO_URI: ${{vars.MONGO_URI}}
  MONGO_USERNAME: ${{secrets.MONGO_USER}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}

jobs:
  unit-test:
    name: unit-testing
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Cache Dependencies
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
    - name: Install Dependencies
      run: npm install
    - name: Unit Testing
      run: npm test
    - name: Code Coverage
      continue-on-error: true
      run: npm run coverage
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: UT Results
        path: test-results.xml
    - name: Upload Coverage
      uses: actions/upload-artifact@v4
      with:
        name: Upload Coverage
        path: coverage
  docker:
    name: Containerization
    needs: unit-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4
    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: GHCR Login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.repository_owner}}
        password: ${{secrets.GITHUB_TOKEN}}
    - name: Docker build
      uses: docker/build-push-action@v6
      with:
        run: pwd
        context: .
        push: false
        tags: ${{secrets.DOCKER_USERNAME}}/solar-system:${{github.sha}}
    - name: Docker Run
      run: |
        docker images
        docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{secrets.DOCKER_USERNAME}}/solar-system:${{github.sha}}
        export IP=(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app) 
        echo $IP 
        echo Testing url image using wget 
        wget -q -O - 127.0.0.1:3000/live | grep live
    - name: Docker Push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: |
              ${{secrets.DOCKER_USERNAME}}/solar-system:${{github.sha}}
              ghcr.io/${{github.repository_owner}}/solar-system:${{github.sha}}
  deploy:
    name: Deployment
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Install kubectl CLI
      uses: azure/setup-kubectl@v3
      with:
        version: v1.26.0

    # - name: Set Context
    #   uses: azure/k8s-set-context@v4
    #   with:
    #     method: kubeconfig
    #     kubeconfig: ${{secrets.KUBE_CONFIG}}
    - name: Check kubernetes version
      run: |
          aws eks update-kubeconfig --name solar-system-cluster
          kubectl version --short
          kubectl get nodes
    # - name: Get Ingress IP
    #   run: |
    #      echo "INGRESS_IP=$(kubectl -n ingress-nginx get service ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV 

    - name: Deployment to Kubernetes Cluster
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '{'
        tokenSuffix: '}'
        files: '["kubernetes/development/*.yaml"]'
      env:
        NAMESPACE: ${{secrets.NAMESPACE}}
        REPLICAS: ${{secrets.REPLICAS}}
        IMAGE: ${{secrets.DOCKER_USERNAME}}/solar-system:${{github.sha}}
        #INGRESS_IP: ${{env.INGRESS_IP}}

    - name: Create Secret
      run: kubectl create secret mongo-db-creds --from-literal=MONGO_URI=$MONGO_URI --from-literal=MONGO_USERNAME=$MONGO_USERNAME --from-literal=MONGO_PASSWORD=$MONOG_PASSWORD -n ${{secrets.NAMESPACE}} --sava-config --dry-run=client -o yaml
      
    - name: Deploy Yamls  
      run: |
          kubectl apply -f kubernetes/deployment/*.yaml 